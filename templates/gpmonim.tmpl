#! /bin/bash -l
# The gp_imaging script that, if the calibration is successful, runs on the rest of the data
# It retries every hour to do any observation that hasn't yet been entered into our processing database
# When every observation has been processed it no longer submits itself to the queue
set -x

pipeuser=PIPEUSER
calid=CALID
datadir=BASEDIR

# Common singularity command to run the python code
SINGCMD="singularity exec ${GPMCONTAINER} "

epoch=Epoch$(${SINGCMD} "${GPMBASE}/determine_epoch.py" --obsid $calid)
#datadir="${datadir}/${epoch}"

cd "${datadir}" || exit 1

# Test to see if the calibration solution meets minimum quality control. At the moment
# this is a simple check based on the number of flagged solutions
solutions="${calid}/${calid}_local_gleam_model_solutions_initial_ref.bin"


# Need to confirm the python script works
result=$(${SINGCMD} "${GPMBASE}/check_solutions.py" -t 0.5 -s 4 "${solutions}")
if echo "${result}" | grep -q fail
then
    mv "${solutions}" "${solutions%.bin}_failed.bin"
    echo "Calibration solutions file failed checks. Exiting. "

    # Email goes here

    exit 111
fi

${SINGCMD} "${GPMBASE}/gpm_track.py" obs_status --obs_id ${calid} --status "calibrated"

# Find all the observations who have been assigned the given calibrator
# That have not yet been processed, as recorded by our database
#obsids=$(${SINGCMD} "${GPMBASE}/gp_monitor_lookup.py" --calid $calid --allowed-status unprocessed)
obsids=$(${SINGCMD} ${GPMBASE}/gpm_track.py ls_obs_for_cal --calid $calid)

if [[ $obsids != "" ]]
then
    for obs in $obsids
    do

        ${SINGCMD} "${GPMBASE}/gpm_track.py" import_obs --obs_id "$obs"

        status=$(${SINGCMD} ${GPMBASE}/gpm_track.py check_obs_status --obs_id "$obs")
        
        if [[ "${status}" == "unprocessed" ]]
        then
            ${SINGCMD} "${GPMBASE}/gpm_track.py" obs_status --obs_id "${obs}" --status "checking"

            echo "${obs}" > "${obs}_obsid.txt"

            dep=($(obs_manta.sh -p $epoch -o "${obs}_obsid.txt"))
            depend=${dep[3]}
            dep=($(obs_autoflag.sh -d ${depend} -p ${epoch} $obs))
            depend=${dep[3]}
            dep=($(obs_apply_cal.sh -d ${depend} -p "${epoch}" -c $calfile -z  $obs))
            depend=${dep[3]}
            dep=($(obs_uvflag.sh -d ${depend} -p "${epoch}" -z $obs))
            depend=${dep[3]}
            dep=($(obs_image.sh -d ${depend} -p "${epoch}" -z $obs))
            depend=${dep[3]}
            dep=($(obs_transient.sh -d ${depend} -p "${epoch}" -z $obs))
            depend=${dep[3]}
            depp=($(obs_postimage.sh -d ${depend} -p "${epoch}" $obs))
            dep=($(obs_tfilter.sh -d ${depend} -p "${epoch}" $obs))
        fi
    done
    
else
    echo "No obsids have been assigned to calibration $calid in the database"
fi
