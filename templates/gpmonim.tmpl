#! /bin/bash -l
# The gp_imaging script that, if the calibration is successful, runs on the rest of the data
# It retries every hour to do any observation that hasn't yet been entered into our processing database
# When every observation has been processed it no longer submits itself to the queue
set -x

pipeuser=PIPEUSER
calid=CALID
datadir=DATADIR

# Retrieving unusual variables so that we can easily resubmit the job to check all the data was processed
script=SCRIPT
output=OUTPUT
error=ERROR
account=ACCOUNT
queue=QUEUE

epoch=$(determine_epoch.py --obsid $calid)
epoch="Epoch${epoch}"
datadir="${datadir}/${epoch}"

cd "${datadir}" || exit 1

# Test to see if the calibration solution meets minimum quality control. At the moment
# this is a simple check based on the number of flagged solutions
solutions="${calid}/${calid}solutions_initial_ref.bin"

# Need to confirm the python script works
result=$(check_solutions.py -t 0.25 -s 4 "${solutions}")
if echo "${result}" | grep -q fail
then
    mv "${solutions}" "${solutions%.bin}_ref_failed.bin"
    echo "Calibration solutions file failed checks. Exiting. "

    # Email goes here

    exit 111
fi
# Find all the observations taken within +/-12h of that calibrator
# That have not yet been processed, as recorded by our database
obsids=$(gp_monitor_lookup.py --calid $calid)

if [[ $obsids != "" ]]
then
    for obs in $obsids
    do
    # TODO: add the track_gp.py that tells our tracking database that we are now working on this obsid
        dep=($(obs_manta.sh -p $epoch -o $obs))
        depend=${dep[3]}
        dep=($(obs_autoflag.sh -d ${depend} -p ${epoch} $obs))
        depend=${dep[3]}
        dep=($(obs_apply_cal.sh -d ${depend} -p "${epoch}" -c $calid -z  $obs))
        depend=${dep[3]}
        dep=($(obs_uvflag.sh -d ${depend} -p "${epoch}" -z $obs))
        depend=${dep[3]}
        dep=($(obs_image.sh -d ${depend} -p "${epoch}" -z $obs))
        depend=${dep[3]}
        dep=($(obs_transient.sh -d ${depend} -p "${epoch}" -z $obs))
    done
    sub="sbatch --begin=now+24h --export=ALL  --time=01:00:00 --mem=${GPMABSMEMORY}G -M ${GPMCOMPUTER} --output=${output} --error=${error}"
    sub="${sub} ${GPMNCPULINE} ${account} ${GPMTASKLINE} ${queue} ${script}.sbatch"
else
    echo "No further unprocessed data found; will not resubmit ${script}."
fi
